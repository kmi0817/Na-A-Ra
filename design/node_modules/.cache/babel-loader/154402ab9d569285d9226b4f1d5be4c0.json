{"ast":null,"code":"var _jsxFileName = \"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Admin/User_data_admin_Detail.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Contents_none from \"../../components/mypageComponents/contents_none\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Reviews_data = () => {\n  _s();\n\n  const [user_reviews, setuserReviews] = useState();\n  const [user_reports, setuserReports] = useState();\n  const [user_communities, setuserCommunities] = useState();\n  const [user_comments, setuserComments] = useState();\n  const [userLength, setuserLength] = useState(0);\n  const [user_id, setuserId] = useState();\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    LoadData();\n    setuserId(location.state.id);\n  }, []);\n\n  const LoadData = async () => {\n    axios.get('/admin/member' + location.state.id, {}).then(function (response) {\n      setuserReviews(response.data.reviews_results);\n      setuserReports(response.data.reports_results);\n      setuserCommunities(response.data.communities_results);\n      setuserComments(response.data.comments_results);\n    }).catch(function (error) {\n      console.log(\"can't load server's data.\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: userLength == 0 ? /*#__PURE__*/_jsxDEV(Contents_none, {\n      text: \"\\uAC00\\uC785\\uB41C \\uD68C\\uC6D0\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review_Div\",\n      children: user_data.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"review_comment_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment_No\",\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment_Desc\",\n          onClick: e => MoveUser(data.user_id, e),\n          children: data.user_id\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment_Data\",\n          children: data.created_at\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment_Data\",\n          children: data.is_admin ? \"관리자\" : \"회원\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(Reviews_data, \"XmdgTNBol0Rhj2xxbN8gt/KCMR0=\", true);\n\n_c = Reviews_data;\nexport default Reviews_data;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews_data\");","map":{"version":3,"sources":["/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Admin/User_data_admin_Detail.js"],"names":["axios","React","useState","useEffect","Contents_none","Reviews_data","user_reviews","setuserReviews","user_reports","setuserReports","user_communities","setuserCommunities","user_comments","setuserComments","userLength","setuserLength","user_id","setuserId","navigate","useNavigate","location","useLocation","LoadData","state","id","get","then","response","data","reviews_results","reports_results","communities_results","comments_results","catch","error","console","log","user_data","map","index","e","MoveUser","created_at","is_admin"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iDAA1B;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,YAAD,EAAeC,cAAf,IAAiCL,QAAQ,EAA/C;AACA,QAAM,CAACM,YAAD,EAAeC,cAAf,IAAiCP,QAAQ,EAA/C;AACA,QAAM,CAACQ,gBAAD,EAAmBC,kBAAnB,IAAyCT,QAAQ,EAAvD;AACA,QAAM,CAACU,aAAD,EAAgBC,eAAhB,IAAmCX,QAAQ,EAAjD;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACc,OAAD,EAAUC,SAAV,IAAuBf,QAAQ,EAArC;AACA,QAAMgB,QAAQ,GAAGC,WAAW,EAA5B;AACA,QAAMC,QAAQ,GAAGC,WAAW,EAA5B;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,QAAQ;AACRL,IAAAA,SAAS,CAACG,QAAQ,CAACG,KAAT,CAAeC,EAAhB,CAAT;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMF,QAAQ,GAAG,YAAW;AAC1BtB,IAAAA,KAAK,CAACyB,GAAN,CAAU,kBAAkBL,QAAQ,CAACG,KAAT,CAAeC,EAA3C,EAA+C,EAA/C,EAECE,IAFD,CAEM,UAAUC,QAAV,EAAoB;AACxBpB,MAAAA,cAAc,CAACoB,QAAQ,CAACC,IAAT,CAAcC,eAAf,CAAd;AACApB,MAAAA,cAAc,CAACkB,QAAQ,CAACC,IAAT,CAAcE,eAAf,CAAd;AACAnB,MAAAA,kBAAkB,CAACgB,QAAQ,CAACC,IAAT,CAAcG,mBAAf,CAAlB;AACAlB,MAAAA,eAAe,CAACc,QAAQ,CAACC,IAAT,CAAcI,gBAAf,CAAf;AACD,KAPD,EAQCC,KARD,CAQO,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD,KAVD;AAWD,GAZD;;AAeE,sBACI;AAAA,cAEQtB,UAAU,IAAI,CAAd,gBACA,QAAC,aAAD;AAAe,MAAA,IAAI,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,YADA,gBAGA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAEAuB,SAAS,CAACC,GAAV,CAAc,CAACV,IAAD,EAAMW,KAAN,kBACV;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACI;AAAkB,UAAA,SAAS,EAAC,YAA5B;AAAA,oBAA0CA,KAAK,GAAC;AAAhD,WAAWA,KAAX;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAkB,UAAA,SAAS,EAAC,cAA5B;AAA2C,UAAA,OAAO,EAAEC,CAAC,IAAIC,QAAQ,CAACb,IAAI,CAACZ,OAAN,EAAewB,CAAf,CAAjE;AAAA,oBAAqFZ,IAAI,CAACZ;AAA1F,WAAWuB,KAAX;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAkB,UAAA,SAAS,EAAC,cAA5B;AAAA,oBAA4CX,IAAI,CAACc;AAAjD,WAAWH,KAAX;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAkB,UAAA,SAAS,EAAC,cAA5B;AAAA,oBAA4CX,IAAI,CAACe,QAAL,GAAgB,KAAhB,GAAwB;AAApE,WAAWJ,KAAX;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAFA;AAAA;AAAA;AAAA;AAAA;AALR,mBADJ;AAqBH,CAnDD;;GAAMlC,Y;;KAAAA,Y;AAqDN,eAAeA,YAAf","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Contents_none from \"../../components/mypageComponents/contents_none\";\n\nconst Reviews_data = () => {\n  const [user_reviews, setuserReviews] = useState();\n  const [user_reports, setuserReports] = useState();\n  const [user_communities, setuserCommunities] = useState();\n  const [user_comments, setuserComments] = useState();\n  const [userLength, setuserLength] = useState(0);\n  const [user_id, setuserId] = useState();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    LoadData();\n    setuserId(location.state.id);\n  }, []);\n\n  const LoadData = async() => {\n    axios.get('/admin/member' + location.state.id, {\n    })\n    .then(function (response) {\n      setuserReviews(response.data.reviews_results)\n      setuserReports(response.data.reports_results)\n      setuserCommunities(response.data.communities_results)\n      setuserComments(response.data.comments_results)\n    })\n    .catch(function (error) {\n      console.log(\"can't load server's data.\")\n    })\n  }\n\n\n    return (\n        <>\n            {\n                userLength == 0 ? \n                <Contents_none text=\"가입된 회원이 없습니다.\"></Contents_none> \n                :\n                <div className=\"review_Div\">\n                {\n                user_data.map((data,index) => (\n                    <div className=\"review_comment_div\">\n                        <span key={index} className=\"comment_No\">{index+1}</span>\n                        <span key={index} className=\"comment_Desc\" onClick={e => MoveUser(data.user_id, e)}>{data.user_id}</span>\n                        <span key={index} className=\"comment_Data\">{data.created_at}</span>\n                        <span key={index} className=\"comment_Data\">{data.is_admin ? \"관리자\" : \"회원\"}</span>\n                    </div>\n                ))\n                }\n                </div>\n            }\n        </>\n    );\n}\n\nexport default Reviews_data;"]},"metadata":{},"sourceType":"module"}