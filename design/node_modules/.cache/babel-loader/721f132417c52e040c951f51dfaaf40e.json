{"ast":null,"code":"var _jsxFileName = \"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Newapi.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport DaumPostcode from 'react-daum-postcode';\nimport MenuBar from \"../components/MenuBar\";\nimport '../Test2.css';\nimport Post from './AddrPopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewTest() {\n  _s();\n\n  const [jsondata, setJsondata] = useState([{}]);\n  const [datalength, setLength] = useState(0);\n  const [symptom_level, setSymptom_level] = useState(1);\n  const [symptom, setSymptom] = useState('이+아픔');\n  const [address, setAddress] = useState();\n  const [popup, setPopup] = useState(false);\n  const [inputAddr, setinputAddr] = useState('경기 남양주시 불암로 336');\n  const [inputType, setinputType] = useState('내과');\n  const [inputFilter, setinputFilter] = useState('all');\n  useEffect(() => {\n    axios({\n      method: 'get',\n      url: 'newapi?inputAddr=' + inputAddr + '&inputType=' + inputType + '&inputFilter=' + inputFilter\n    }).then(response => {\n      console.log(\"!!!!새로운 데이터!!!!! : \" + response.data);\n      setJsondata(response.data);\n    });\n  }, [inputAddr, inputType, inputFilter]);\n\n  const AfterSubmit = e => {\n    e.preventDefault(); //redirect 방지\n\n    const symptom_level = e.target[0].value;\n    const symptom = e.target[1].value;\n\n    if (symptom_level != 0 && symptom != '증상') {\n      setSymptom_level(e.target[0].value);\n      setSymptom(e.target[1].value);\n    } else if (symptom_level != 0 && symptom == '증상') {\n      alert(\"증상을 선택해주세요.\");\n    } else if (symptom_level == 0 && symptom != '증상') {\n      alert(\"증상 정도를 선택해주세요.\");\n    } else {\n      alert(\"증상 정도와 증상을 선택해주세요.\");\n    }\n  };\n\n  const Call = (value, e) => {\n    alert(\"전화번호: \" + value);\n  }; //주소가 state에 잘 들어갔는지 확인\n\n\n  const CheckAddr = e => {\n    console.log(address);\n  };\n\n  const TestApi = e => {\n    axios({\n      method: 'get',\n      url: 'newapi?inputAddr=' + inputAddr + '&inputType=' + inputType + '&inputFilter=' + inputFilter\n    }).then(response => {\n      console.log(\"!!!!새로운 데이터!!!!! : \" + response.data);\n    });\n  }; //const inputAddr = req.query.inputAddr;\n  //const inputType = req.query.inputType;\n  //const inputFilter = req.query.inputFilter;\n  //위와 같이 3개 값 넘겨줘야 함.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BackgroundDiv\",\n    children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setPopup(!popup);\n      },\n      children: \"\\uC8FC\\uC18C \\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), popup && /*#__PURE__*/_jsxDEV(Post, {\n      address: address,\n      setAddress: setAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: CheckAddr,\n      children: \"\\uC798 \\uB4E4\\uC5B4\\uAC14\\uB294\\uC9C0 \\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), jsondata]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewTest, \"BI7I8/JBsdryJJ3hS56ShkzmRZM=\");\n\n_c = NewTest;\nexport default NewTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTest\");","map":{"version":3,"sources":["/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Newapi.js"],"names":["React","useEffect","useState","axios","DaumPostcode","MenuBar","Post","NewTest","jsondata","setJsondata","datalength","setLength","symptom_level","setSymptom_level","symptom","setSymptom","address","setAddress","popup","setPopup","inputAddr","setinputAddr","inputType","setinputType","inputFilter","setinputFilter","method","url","then","response","console","log","data","AfterSubmit","e","preventDefault","target","value","alert","Call","CheckAddr","TestApi"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport axios from 'axios';\nimport DaumPostcode from 'react-daum-postcode';\nimport MenuBar from \"../components/MenuBar\";\nimport '../Test2.css'\nimport Post from './AddrPopup';\n\nfunction NewTest() {\n    const [jsondata, setJsondata] = useState([{}]);\n    const [datalength, setLength] = useState(0);\n    const [symptom_level, setSymptom_level] = useState(1);\n    const [symptom, setSymptom] = useState('이+아픔');\n\n    const [address, setAddress] = useState();\n    const [popup, setPopup] = useState(false);\n\n    const [inputAddr, setinputAddr] = useState('경기 남양주시 불암로 336');\n    const [inputType, setinputType] = useState('내과');\n    const [inputFilter, setinputFilter] = useState('all');\n\n\n    \n    \n    useEffect( () => {\n        axios( {\n            method: 'get',\n            url: 'newapi?inputAddr=' + inputAddr + '&inputType=' + inputType + '&inputFilter=' + inputFilter,\n        })\n        .then(response => {\n            console.log(\"!!!!새로운 데이터!!!!! : \" + response.data);\n            setJsondata(response.data);\n        })\n    }, [inputAddr, inputType, inputFilter]);\n\n    const AfterSubmit = (e) => {\n        e.preventDefault(); //redirect 방지\n\n        const symptom_level = e.target[0].value;\n        const symptom = e.target[1].value;\n\n        if (symptom_level != 0 && symptom != '증상') {\n            setSymptom_level(e.target[0].value)\n            setSymptom(e.target[1].value)\n        }\n        else if (symptom_level != 0 && symptom == '증상') {\n            alert(\"증상을 선택해주세요.\");\n        }\n        else if (symptom_level == 0 && symptom != '증상') {\n            alert(\"증상 정도를 선택해주세요.\");\n        }\n        else {\n            alert(\"증상 정도와 증상을 선택해주세요.\");\n        }\n    }\n\n    const Call = (value, e) => {\n        alert(\"전화번호: \" + value);\n    }\n\n    //주소가 state에 잘 들어갔는지 확인\n    const CheckAddr = (e) => {\n        console.log(address);\n    }\n\n    const TestApi = (e) => {\n        axios( {\n            method: 'get',\n            url: 'newapi?inputAddr=' + inputAddr + '&inputType=' + inputType + '&inputFilter=' + inputFilter,\n        })\n        .then(response => {\n            console.log(\"!!!!새로운 데이터!!!!! : \" + response.data);\n        })\n    }\n    \n\n\n\n\n    //const inputAddr = req.query.inputAddr;\n    //const inputType = req.query.inputType;\n    //const inputFilter = req.query.inputFilter;\n    //위와 같이 3개 값 넘겨줘야 함.\n    return (\n        <div className=\"BackgroundDiv\">\n            <MenuBar />\n            \n\n            <input value={address}></input>\n            <button onClick={()=> {setPopup(!popup)}}>주소 검색</button>\n            {\n                popup && \n                <Post address={address} setAddress={setAddress}></Post>\n            }\n            <button onClick={CheckAddr}>잘 들어갔는지 확인</button>\n\n\n            {jsondata}\n        </div>\n    )\n}\n\nexport default NewTest;"]},"metadata":{},"sourceType":"module"}