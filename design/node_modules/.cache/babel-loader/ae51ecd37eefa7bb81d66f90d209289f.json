{"ast":null,"code":"var _jsxFileName = \"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Communities/BoardComments.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport MenuBar from '../../components/MenuBar';\nimport Footer from \"../../components/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BoardComments = props => {\n  _s();\n\n  const [user_id, setUserId] = useState();\n  const [admin_id, setAdminId] = useState(null);\n  const [comments, setcomments] = useState();\n  const [commentsLength, setLength] = useState(0);\n  const navigate = useNavigate();\n  const posting_id = props.posting_id;\n  const board_type = props.board_type;\n  const path = \"/community/\" + board_type + \"/comment-post\";\n  useEffect(() => {\n    GetData();\n  }, []);\n\n  const GetData = async e => {\n    axios.get(path, {}).then(function (response) {\n      setUserId(response.data.user_id);\n\n      if (response.data.admin_id) {\n        setAdminId(response.data.admin_id);\n      } else {\n        setAdminId(null);\n      }\n\n      setcomments(response.data.comments);\n      setLength(response.data.comments.length);\n    }).catch(function (error) {});\n  };\n\n  const AfterSubmit = e => {\n    e.preventDefault(); //redirect 방지\n\n    axios.get('/checkUser', {}).then(function (response) {\n      if (response.data.user_id_id !== null) {\n        setUserId(response.data.user_id_id);\n      }\n    }).catch(function (error) {});\n    const description = e.target[0].value;\n    const writer = user_id;\n    const posting_id = posting_id;\n    console.log(\"desc: \" + description);\n    console.log(\"writer: \" + writer);\n    console.log(\"posting: \" + posting_id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: AfterSubmit,\n        className: \"commentsForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"description\",\n          id: \"description\",\n          cols: \"30\",\n          rows: \"5\",\n          placeholder: \"\\uB313\\uAE00 \\uC791\\uC131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"hidden\",\n          name: \"writer\",\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"hidden\",\n          name: \"posting_id\",\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SubmitBtnDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"submitBtn\",\n            type: \"submit\",\n            children: \"\\uC644\\uB8CC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"BoardComments\",\n        children: commentsLength === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"commentsNoneText\",\n          children: \"\\uB4F1\\uB85D\\uB41C \\uB313\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this) : comments.map((data, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: id % 2 == 0 ? 'commentsDiv' + 0 : 'commentsDiv' + 1,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"writer_id\",\n            children: \"\\uC775\\uBA85\"\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"description\",\n            children: data.description\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"description\",\n            children: data.created_at\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 23\n          }, this), admin_id !== null ? /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BoardComments, \"nPSgSu27J4Aesp/2OaBX1aJ+Nrc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = BoardComments;\nexport default BoardComments;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardComments\");","map":{"version":3,"sources":["/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Communities/BoardComments.js"],"names":["axios","React","useState","useEffect","useLocation","useNavigate","MenuBar","Footer","BoardComments","props","user_id","setUserId","admin_id","setAdminId","comments","setcomments","commentsLength","setLength","navigate","posting_id","board_type","path","GetData","e","get","then","response","data","length","catch","error","AfterSubmit","preventDefault","user_id_id","description","target","value","writer","console","log","map","id","created_at"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect} from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport MenuBar from '../../components/MenuBar'\nimport Footer from \"../../components/Footer\";\n\nconst BoardComments = (props) => {\n  const [user_id, setUserId] = useState();\n  const [admin_id, setAdminId] = useState(null);\n  const [comments, setcomments] = useState();\n  const [commentsLength, setLength] = useState(0);\n  const navigate = useNavigate();\n  const posting_id = props.posting_id;\n  const board_type = props.board_type;\n  const path = \"/community/\" + board_type + \"/comment-post\";\n  \n  useEffect(() => {\n      GetData();\n  }, []);\n\n  const GetData = async (e) => {\n    axios.get(path, {\n    })\n    .then(function (response) {\n      setUserId(response.data.user_id);\n      if (response.data.admin_id) {\n        setAdminId(response.data.admin_id);\n      }\n      else {\n        setAdminId(null);\n      }\n      setcomments(response.data.comments);\n      setLength(response.data.comments.length);\n    })\n    .catch(function (error) {\n    })\n  }\n\n  const AfterSubmit = (e) => {\n    e.preventDefault(); //redirect 방지\n    axios.get('/checkUser', {\n    })\n    .then(function (response) {\n      if( response.data.user_id_id !== null) {\n        setUserId(response.data.user_id_id)\n      }\n    })\n    .catch(function (error) {\n    })\n    const description = e.target[0].value;\n    const writer = user_id;\n    const posting_id = posting_id;\n    \n    console.log(\"desc: \" +description)\n    console.log(\"writer: \" +writer)\n    console.log(\"posting: \"+posting_id)\n    \n    \n}\n\n    return (\n        <>\n          <MenuBar></MenuBar>\n          <div className=\"cardDiv\">\n          <form onSubmit={AfterSubmit} className=\"commentsForm\">\n            <textarea name=\"description\" id=\"description\" cols=\"30\" rows=\"5\" placeholder=\"댓글 작성\"></textarea>\n            <input type=\"hidden\" name=\"writer\" value=\"\"></input>\n            <input type=\"hidden\" name=\"posting_id\" value=\"\"></input>\n            <div className=\"SubmitBtnDiv\">\n            <button id=\"submitBtn\" type=\"submit\">완료</button>\n            </div>\n          </form>\n\n          <div className=\"BoardComments\">\n          {\n              commentsLength === 0 ? \n                <p className=\"commentsNoneText\">등록된 댓글이 없습니다.</p>\n              :\n              comments.map((data, id) => (\n                  <div className={id % 2 == 0 ? 'commentsDiv'+ 0 : 'commentsDiv'+ 1}>\n                      <p key={id} className=\"writer_id\">익명</p>\n                      <p key={id} className=\"description\">{data.description}</p>\n                      <p key={id} className=\"description\">{data.created_at}</p>\n                      {admin_id !== null ?\n                        <button>삭제</button>\n                      :\n                        null\n                      }\n                  </div>\n              ))\n          }\n          </div>\n          </div>\n          <Footer></Footer>\n        </>\n    );\n}\n\nexport default BoardComments;"]},"metadata":{},"sourceType":"module"}