{"ast":null,"code":"var _jsxFileName = \"/Users/labia/Public/Hospital-recommendation/design/src/pages/SignupModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router\";\nimport DaumPostcode from \"react-daum-postcode\";\nimport './modal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = props => {\n  _s();\n\n  const {\n    open,\n    close,\n    header\n  } = props;\n  const setModalOpen = props.setModalOpen;\n  const navigate = useNavigate();\n\n  const AfterSubmit = e => {\n    e.preventDefault(); //redirect 방지\n\n    const createId = e.target[0].value;\n    const createPassword = e.target[1].value;\n    console.log(createId);\n    console.log(createPassword);\n\n    if (e.target[0].value !== '') {\n      axios.post(\"/signup\", {\n        createId: createId,\n        createPassword: createPassword\n      }).then(function (response) {\n        if (response.data.text == \"exist\") {\n          alert(\"이미 존재하는 아이디입니다.\");\n          setModalOpen(false);\n        } else if (response.data.text == \"success\") {\n          alert(\"회원가입에 성공했습니다. \\n로그인 화면으로 이동합니다.\");\n          setModalOpen(false);\n        } else {\n          alert(\"회원가입에 문제가 발생했습니다. 관리자에게 문의하세요.\");\n          setModalOpen(false);\n        }\n      }).catch(function (error) {\n        alert(\"요청 실패\");\n      });\n    } else {\n      alert(\"입력해주세요.\");\n    }\n  }; //\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: open ? 'openModal modal' : 'modal',\n    children: open ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [header, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close\",\n          onClick: close,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"signForm\",\n          onSubmit: AfterSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            required: true,\n            name: \"createId\",\n            id: \"inputId\",\n            placeholder: \"ID\",\n            minlength: \"5\",\n            maxlength: \"20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            required: true,\n            name: \"createPassword\",\n            id: \"inputPassword\",\n            placeholder: \"Password\",\n            minlength: \"7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"submitBtn\",\n            type: \"submit\",\n            children: \"\\uC644\\uB8CC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/labia/Public/Hospital-recommendation/design/src/pages/SignupModal.js"],"names":["React","useEffect","useState","axios","useNavigate","DaumPostcode","Post","props","open","close","header","setModalOpen","navigate","AfterSubmit","e","preventDefault","createId","target","value","createPassword","console","log","post","then","response","data","text","alert","catch","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router\";\nimport DaumPostcode from \"react-daum-postcode\";\nimport './modal.css';\n\nconst Post = (props) => {\n  const { open, close, header } = props;\n  const setModalOpen = props.setModalOpen;\n  const navigate = useNavigate();\n\n  const AfterSubmit = (e) => {\n    e.preventDefault(); //redirect 방지\n    const createId = e.target[0].value;\n    const createPassword = e.target[1].value;\n    console.log(createId)\n    console.log(createPassword)\n    \n    if (e.target[0].value !== '') {\n      axios.post(\"/signup\", {\n        createId: createId,\n        createPassword: createPassword,\n      })\n      .then(function (response) {\n        if (response.data.text == \"exist\") {\n          alert(\"이미 존재하는 아이디입니다.\");\n          setModalOpen(false);\n        }\n        else if (response.data.text == \"success\") {\n          alert(\"회원가입에 성공했습니다. \\n로그인 화면으로 이동합니다.\");\n          setModalOpen(false);\n        }\n        else {\n          alert(\"회원가입에 문제가 발생했습니다. 관리자에게 문의하세요.\");\n          setModalOpen(false);\n        }\n      })\n      .catch(function (error) {\n        alert(\"요청 실패\");\n      })\n  }\n  else {\n      alert(\"입력해주세요.\");\n  }\n}\n//\n  return (\n    <div className={open ? 'openModal modal' : 'modal'}>\n      {open ? (\n        <section>\n          <header>\n            {header}\n            <button className=\"close\" onClick={close}>&times;</button>\n          </header>\n          <main>\n          <form className=\"signForm\" onSubmit={AfterSubmit}>\n            <input type=\"text\" required name=\"createId\" id=\"inputId\" placeholder=\"ID\" minlength=\"5\" maxlength=\"20\"></input>\n            <input type=\"password\" required name=\"createPassword\" id=\"inputPassword\" placeholder=\"Password\" minlength=\"7\"></input>\n            <button id=\"submitBtn\" type=\"submit\">완료</button>\n          </form>\n          </main>\n        </section>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}