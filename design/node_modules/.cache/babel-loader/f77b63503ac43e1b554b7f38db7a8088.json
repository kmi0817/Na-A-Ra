{"ast":null,"code":"var _jsxFileName = \"/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Communities/QuestionDetail.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport MenuBar from '../../components/MenuBar';\nimport Footer from \"../../components/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Question = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const location = useLocation(); //console.log(\"state: \", location.state.id);\n\n  const [data_id, setDataId] = useState(location.state.id);\n  const [data, setData] = useState({\n    title: \"제목1\",\n    description: \"내용입니다.\",\n    created_at: \"2022-04-27T07:51:51.702Z\"\n  });\n  const [dataBool, setBool] = useState(false);\n  const [user_id, setUserId] = useState();\n  const [admin_id, setAdminId] = useState(null);\n  const [postings, setPostings] = useState();\n  const [comments, setcomments] = useState();\n  const [commentsLength, setLength] = useState(0);\n  const path = \"/community//questions/comment-post\";\n  const data_path = \"/community/questions/\" + data_id;\n  useEffect(async () => {\n    setDataId(location.state.id);\n    setBool(false);\n    GetData();\n  }, []);\n\n  const GetData = async () => {\n    console.log(data_id);\n    axios.get(data_path, {}).then(function (response) {\n      setcomments(response.data.comments);\n      setLength(response.data.comments.length);\n      setData(response.data.posting);\n      setBool(true);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const AfterSubmit = e => {\n    e.preventDefault(); //redirect 방지\n\n    const description = e.target[0].value;\n    const posting_id = location.state.id;\n\n    if (e.target[0].value != '') {\n      axios.get('/checkUser', {}).then(function (response) {\n        if (response.data.user_id_id != \"\") {\n          axios.post(path, {\n            writer: response.data.user_id_id,\n            posting_id: posting_id,\n            description: description\n          }).then(function (response) {\n            alert(response.data.text);\n            setText('');\n            GetData();\n          }).catch(function (error) {\n            alert(\"댓글 작성 실패\");\n          });\n        } else {\n          alert(\"회원만 작성 가능합니다.\");\n        }\n      }).catch(function (error) {});\n    } else {\n      alert(\"내용을 입력해주세요.\");\n    }\n  };\n\n  const BacktoPage = () => {\n    navigate('/community/question');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DetailDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"DetailTitle\",\n          children: data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"DetailDate\",\n          children: data.created_at\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"DetailDesc\",\n          children: data.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"BackBtn\",\n      onClick: BacktoPage,\n      children: \"\\uC774\\uC804\\uC73C\\uB85C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Question, \"ndgHeQrdJpLaSuGlkjsijllu3lI=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = Question;\nexport default Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"sources":["/Users/hwang-yejin/Desktop/Nodejs_mongoDB-main/design/src/pages/Communities/QuestionDetail.js"],"names":["axios","React","useState","useEffect","useLocation","useNavigate","MenuBar","Footer","Question","navigate","location","data_id","setDataId","state","id","data","setData","title","description","created_at","dataBool","setBool","user_id","setUserId","admin_id","setAdminId","postings","setPostings","comments","setcomments","commentsLength","setLength","path","data_path","GetData","console","log","get","then","response","length","posting","catch","error","AfterSubmit","e","preventDefault","target","value","posting_id","user_id_id","post","writer","alert","text","setText","BacktoPage"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect} from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport MenuBar from '../../components/MenuBar'\nimport Footer from \"../../components/Footer\";\n\nconst Question = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  //console.log(\"state: \", location.state.id);\n  const [data_id, setDataId] = useState(location.state.id);\n  const [data, setData] = useState({title: \"제목1\", description: \"내용입니다.\", created_at: \"2022-04-27T07:51:51.702Z\"});\n  const [dataBool, setBool] = useState(false);\n\n  const [user_id, setUserId] = useState();\n  const [admin_id, setAdminId] = useState(null);\n  const [postings, setPostings] = useState();\n  const [comments, setcomments] = useState();\n  const [commentsLength, setLength] = useState(0);\n  const path = \"/community//questions/comment-post\";\n  const data_path = \"/community/questions/\" + data_id;\n\n\n  \n  useEffect(async () => {\n    setDataId(location.state.id);\n    setBool(false)\n    GetData();\n  }, []);\n\n  const GetData = async () => {\n    console.log(data_id)\n    axios.get(data_path, {\n    })\n    .then(function (response) {\n      setcomments(response.data.comments)\n      setLength(response.data.comments.length)\n      setData(response.data.posting)\n      setBool(true)\n    })\n    .catch(function (error) {\n      console.log(error)\n    })\n  }\n\n  const AfterSubmit = (e) => {\n    e.preventDefault(); //redirect 방지\n    const description = e.target[0].value;\n    const posting_id = location.state.id;\n\n    if (e.target[0].value != '') {\n      axios.get('/checkUser', {\n      })\n      .then(function (response) {\n        if( response.data.user_id_id != \"\") {\n          axios.post(path, {\n            writer: response.data.user_id_id,\n            posting_id: posting_id,\n            description: description,\n          })\n          .then(function (response) {\n            alert(response.data.text);\n            setText('')\n            GetData();\n          })\n          .catch(function (error) {\n            alert(\"댓글 작성 실패\");\n          })\n        }\n        else {\n          alert(\"회원만 작성 가능합니다.\")\n        }\n      })\n      .catch(function (error) {\n      })\n    }\n    else {\n      alert(\"내용을 입력해주세요.\");\n    }\n}\n\n  const BacktoPage = () => {\n    navigate('/community/question');\n  }\n\n    return (\n        <>\n          <MenuBar></MenuBar>\n          <div className=\"cardDiv\">\n            {\n                <div className=\"DetailDiv\">\n                    <p className=\"DetailTitle\">{data.title}</p>\n                    <p className=\"DetailDate\">{data.created_at}</p>\n                    <p className=\"DetailDesc\">{data.description}</p>\n                </div>\n            }\n          </div>\n          <button className=\"BackBtn\" onClick={BacktoPage}>이전으로</button>\n\n\n          <Footer></Footer>\n        </>\n    );\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}